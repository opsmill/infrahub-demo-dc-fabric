---
name: Build and Deploy Docusaurus
on:
  pull_request:
  push:
    branches:
      - main

env:
  VALE_VERSION: "3.7.1"

jobs:
  files-changed:
    name: Detect which file has changed
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      documentation: ${{ steps.changes.outputs.documentation_all }}
      python: ${{ steps.changes.outputs.python_all }}
      yaml: ${{ steps.changes.outputs.yaml_all }}
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
      - name: Check for file changes
        uses: opsmill/paths-filter@v3.0.2
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  python-lint:
    if: needs.files-changed.outputs.python == 'true'
    needs: ["files-changed"]
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          submodules: true
      - name: "Setup environment"
        run: "pip install ruff==0.7.1"
      - name: "Linting: ruff check"
        run: "ruff check ."
      - name: "Linting: ruff format"
        run: "ruff format --check --diff"

  yaml-lint:
    if: needs.files-changed.outputs.yaml == 'true'
    needs: ["files-changed"]
    runs-on: "ubuntu-latest"
    timeout-minutes: 5
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          submodules: true
      - name: "Setup environment"
        run: "pip install yamllint==1.35.1"
      - name: "Linting: yamllint"
        run: "yamllint -s ."

  documentation:
    defaults:
      run:
        working-directory: ./docs
    if: |
      always() && !cancelled() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled') &&
      needs.files-changed.outputs.documentation == 'true'
    needs: ["files-changed", "yaml-lint", "python-lint"]
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          submodules: true
      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: docs/package-lock.json
      - name: "Install dependencies"
        run: npm install
      - name: "Setup Python environment"
        run: "pip install invoke toml"
      - name: "Build docs website"
        run: "invoke docs"


  validate-documentation-style:
    if: |
      always() && !cancelled() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    needs: ["files-changed", "yaml-lint", "python-lint"]
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v4"
        with:
          submodules: true

      # The official GitHub Action for Vale doesn't work, installing manually instead:
      # https://github.com/errata-ai/vale-action/issues/103
      - name: Download Vale
        run: |
          curl -sL "https://github.com/errata-ai/vale/releases/download/v${VALE_VERSION}/vale_${VALE_VERSION}_Linux_64-bit.tar.gz" -o vale.tar.gz
          tar -xzf vale.tar.gz
        env:
          VALE_VERSION: ${{ env.VALE_VERSION }}
      - name: "Validate documentation style"
        run: ./vale $(find ./docs -type f \( -name "*.mdx" -o -name "*.md" \) )
